{"version":3,"sources":["components/layouts/Hamburger.js","components/layouts/Navigation.js","assets/button.svg","components/pages/GamePage.js","components/pages/Achievement.js","components/pages/Achievements.js","components/pages/Upgrades.js","components/useInterval.js","components/pages/Reset.js","components/pages/ErrorPage.js","components/layouts/Page.js","App.js","index.js"],"names":["Hamburger","click","handleClass","className","onClick","list","name","path","ecaxt","class","Navigation","useState","setClick","handleLink","menu","map","item","to","exact","GamePage","handleGame","score","src","Button","alt","Achievement","achieveScore","scoree","description","color","setBgcolor","console","log","style","backgroundColor","listOfAchievements","id","Achievements","Achieves","Upgrades","setIsRunning","isRunning","bonus","bonusActive","handleClickBonus","clickBonus","handleBonusActiveFull","Math","round","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","Reset","setScore","setBonus","setAchieveScore","setclickBonus","active","setActive","handleCLick","ErrorPage","Page","localData","localStorage","getItem","JSON","parse","setItem","localDataClickBonus","localAchieveScore","handleButton","localDataBonus","handleBonusActive","bgColor","render","component","App","basename","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a5783041.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../styles/Hamburger.scss'\r\n\r\nconst Hamburger = ({click, handleClass}) => {\r\n    return (\r\n        <button className={handleClass ? \"hamburger hamburger_active\" : \"hamburger\"} onClick={click}>\r\n        <span className=\"hamburger__box\">\r\n            <span className=\"hamburger__inner\">\r\n                \r\n            </span>\r\n        </span>\r\n    </button>\r\n    )\r\n}\r\n\r\nexport default Hamburger\r\n","import React, { useState } from 'react';\r\nimport Hamburger from './Hamburger';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../styles/Navigation.scss';\r\n\r\nconst list = [\r\n  { name: 'Start', path: '/', ecaxt: true },\r\n  { name: 'Upgrades', path: '/Upgrades' },\r\n  { name: 'Achievements', path: '/Achievements' },\r\n  { name: 'Reset', path: '/Reset', class: \"lastItem\" },\r\n];\r\n\r\nconst Navigation = () => {\r\n  const [click, setClick] = useState(false);\r\n\r\n  const handleCLick = () => {\r\n    setClick(!click);\r\n  };\r\n\r\n  const handleLink = () => {\r\n    setClick(!click);\r\n  }\r\n\r\n  const menu = list.map((item) => (\r\n    <li key={item.name} className=\"nav__list--item\">\r\n      <NavLink  className={item.class ? \"nav__link lastItem\" : \"nav__link\"} to={item.path} onClick={handleLink}  exact={item.ecaxt ? item.exact : false}>\r\n        {item.name}\r\n      </NavLink>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <div className=\"navigation\">\r\n        <Hamburger click={handleCLick} handleClass={click} />\r\n\r\n        <nav className={click ? 'nav nav__active' : 'nav'}>\r\n          <ul className=\"nav__list\">{menu}</ul>\r\n        </nav>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","export default __webpack_public_path__ + \"static/media/button.88e6cbd1.svg\";","import React from 'react';\r\nimport '../styles/gamePage.scss';\r\nimport Button from '../../assets/button.svg';\r\n\r\nconst GamePage = ({handleGame, score}) => {\r\n  return (\r\n    <div className=\"gamePage\">\r\n      <h1 className=\"logo\">\r\n        C<span className=\"logo__color1\">lik</span>\r\n        <span className=\"logo__color2\">ens</span>\r\n      </h1>\r\n      <img className=\"button\" onClick={handleGame} src={Button} alt=\"\" />\r\n      <div className=\"score__box\">\r\n      <h2 className=\"score\">{score}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamePage;\r\n","import React from 'react';\r\nimport '../styles/_variables.scss'\r\n\r\nconst Achievement = ({ achieveScore, scoree, name, description, color, setBgcolor }) => {\r\n\r\n  const HandleOnClick = () => {\r\n    setBgcolor(color);\r\n  }\r\n\r\n  console.log(color)\r\n  return (\r\n    <div className=\"achievement__boxitem\">\r\n      {achieveScore >= scoree && (\r\n        <div\r\n          className=\"achievement__element\"\r\n          style={{ backgroundColor: color }}\r\n          onClick={HandleOnClick}\r\n        >\r\n          <h2 className=\"achievement__name\">{name}</h2>\r\n          <p className=\"achievement__description\">{description}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Achievement;\r\n","import React from 'react';\r\nimport Achievement from './Achievement';\r\nimport '../styles/Achievements.scss';\r\n\r\nconst listOfAchievements = [\r\n  {\r\n    id: 1,\r\n    name: 'first point',\r\n    description: '🙂',\r\n    scoree: 1,\r\n    color: \"#D9D9D9\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: '100 points',\r\n    description: '😮',\r\n    scoree: 100,\r\n    color: \"#219653\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: '500 points',\r\n    description: '😁',\r\n    scoree: 500,\r\n    color: \"#F2994A\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: '1000 points',\r\n    description: '🐗',\r\n    scoree: 1000,\r\n    color: \"#BB6BD9\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: '5000 points',\r\n    description: '🦍',\r\n    scoree: 5000,\r\n    color: \"#EB5757\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: '10000 points',\r\n    description: '👇',\r\n    scoree: 10000,\r\n    color: \"#F2C94C\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: '20000 points',\r\n    description: '🛹',\r\n    scoree: 20000,\r\n    color: \"#CCE2FF\",\r\n  },\r\n  {\r\n    id: 8,\r\n    name: '50000 points',\r\n    description: '🦾',\r\n    scoree: 50000,\r\n    color: \"#B0FF98\",\r\n  },\r\n  {\r\n    id: 9,\r\n    name: '100000 points',\r\n    description: 'Kox 😎',\r\n    scoree: 100000,\r\n    color: \"#80E8CA\",\r\n  },\r\n  {\r\n    id: 10,\r\n    name: '200000 points',\r\n    description: 'Kilo kox 😵',\r\n    scoree: 200000,\r\n    color: \"#E6F5B0\",\r\n  },\r\n  {\r\n    id: 11,\r\n    name: '500000 points',\r\n    description: 'Mega kox 🤠',\r\n    scoree: 500000,\r\n    color: \"#BFB4FA\",\r\n  },\r\n  {\r\n    id: 12,\r\n    name: '1000000 points',\r\n    description: 'Giga kox 🧟‍♂',\r\n    scoree: 1000000,\r\n    color: \"#A38D5B\",\r\n  },\r\n  {\r\n    id: 13,\r\n    name: '10000000 points',\r\n    description: 'Tera kox 🚀',\r\n    scoree: 10000000,\r\n    color: \"#C777B8\",\r\n  },\r\n];\r\n\r\nconst Achievements = ({ achieveScore, setBgcolor }) => {\r\n  const Achieves = listOfAchievements.map((item) => (\r\n    <Achievement key={item.id} {...item} achieveScore={achieveScore} setBgcolor={setBgcolor}/>\r\n  ));\r\n  return (\r\n    <>\r\n      <div className=\"achievements\">\r\n        <h2 className=\"achievements__header\">Achievements</h2>\r\n        <div className=\"achievements__grid\">{Achieves}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Achievements;\r\n","import React from 'react';\r\n\r\nimport '../styles/upgrades.scss';\r\n\r\nconst Upgrades = ({\r\n  setIsRunning,\r\n  isRunning,\r\n  bonus,\r\n  bonusActive,\r\n  score,\r\n  handleClickBonus,\r\n  clickBonus,\r\n  handleBonusActiveFull,\r\n}) => {\r\n\r\n  const handleTurnOnOff = () => {\r\n    setIsRunning(!isRunning)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"upgrades\">\r\n        <p>SCORE: {score}</p>\r\n        <div className=\"information\">\r\n          <div className=\"information__box\">\r\n            <p className=\"information__header\">CLICK</p>\r\n            <span>click = {clickBonus}</span>\r\n          </div>\r\n          <div className=\"information__box\">\r\n            <p className=\"information__header\">AUTO-CLICK</p>\r\n            <span>second = {bonus}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"isActive\">\r\n              <p className=\"isActive__text\">AUTO-CLICK is <span className=\"isActive__text--bold\">{isRunning ? 'ON' : 'OFF'}</span></p>\r\n              <button\r\n                className={\r\n                  isRunning ? 'upgrade upgrade__on' : 'upgrade upgrade__off'\r\n                }\r\n                onClick={handleTurnOnOff}\r\n              ></button>\r\n            </div>\r\n        <div className=\"upgrade__section\">\r\n          <div className=\"upgrade__section--box\">\r\n            <p>Click upgrade</p>\r\n            <button className={'upgrade__button'} onClick={handleClickBonus}>\r\n              cost: 200\r\n            </button>\r\n            <p>\r\n              x{Math.round(score/200)}\r\n            </p>\r\n          </div>\r\n          <div className=\"upgrade__section--box\">\r\n            <p>Auto-Click upgrade</p>\r\n            <button className={'upgrade__button'} onClick={bonusActive}>\r\n              cost: 500\r\n            </button>\r\n            <p>\r\n              x{Math.round(score/500)}\r\n              </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Upgrades;\r\n","import { useEffect, useRef} from 'react';\r\n\r\nfunction useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest function.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n\r\nexport default useInterval;","import React, { useState } from 'react';\r\nimport '../styles/Reset.scss';\r\n\r\nconst Reset = ({ setScore, setBonus, setAchieveScore, setclickBonus }) => {\r\n  const [active, setActive] = useState(false);\r\n\r\n  const handleCLick = () => {\r\n    setActive(!active);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setScore(0);\r\n    setBonus(0);\r\n    setAchieveScore(0);\r\n    setclickBonus(1);\r\n  };\r\n\r\n  const twoFunctions = () => {\r\n    handleCLick();\r\n    handleReset();\r\n  }\r\n\r\n  return (\r\n    <div className=\"settings\">\r\n      <button className=\"confirmationButton resetButton\" onClick={handleCLick}>\r\n        RESET\r\n      </button>\r\n      {active ? (\r\n        <div className=\"confirmationView\">\r\n          <p className=\"confirmationText\">Are you sure?</p>\r\n          <div className=\"confirmationBox\">\r\n            <button className=\"confirmationButton\" onClick={handleCLick}>\r\n              No\r\n            </button>\r\n            <button className=\"confirmationButton\" onClick={twoFunctions}>\r\n              Yes\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        []\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reset;\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport '../styles/ErrorPage.scss'\r\n\r\nconst ErrorPage = () => {\r\n    return (\r\n        <div className=\"error\">\r\n            <h2>ERROR</h2>\r\n            <NavLink to='/' className=\"error__button\">\r\n        Start\r\n      </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorPage\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport GamePage from './../pages/GamePage';\r\nimport Achievements from './../pages/Achievements.js';\r\nimport Upgrades from './../pages/Upgrades';\r\nimport '../styles/page.scss';\r\nimport useInterval from '../useInterval';\r\nimport Reset from '../pages/Reset';\r\nimport ErrorPage from '../pages/ErrorPage';\r\n\r\n// Wynik\r\nconst Page = () => {\r\n  const [score, setScore] = useState(() => {\r\n    const localData = localStorage.getItem('score');\r\n    return localData ? JSON.parse(localData) : 0;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('score', score);\r\n  }, [score]);\r\n\r\n  // Bonus podczas klikania\r\n  const [clickBonus, setclickBonus] = useState(() => {\r\n    const localDataClickBonus = localStorage.getItem('clickBonus');\r\n    return localDataClickBonus ? JSON.parse(localDataClickBonus) : 1;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('clickBonus', clickBonus);\r\n  }, [clickBonus]);\r\n\r\n  // Wynik do achievementow\r\n  const [achieveScore, setAchieveScore] = useState(() => {\r\n    const localAchieveScore = localStorage.getItem('achieveScore');\r\n    return localAchieveScore ? JSON.parse(localAchieveScore) : 0;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('achieveScore', achieveScore);\r\n  }, [score]);\r\n\r\n  // ulepszenie pojedynczego klikniecia\r\n\r\n  const handleClickBonus = () => {\r\n    if (score >= 200 ) {\r\n      setclickBonus(clickBonus + 1);\r\n      setScore(score - 200);\r\n    }\r\n  };\r\n\r\n  const handleButton = () => {\r\n    setScore(score + clickBonus);\r\n    setAchieveScore(achieveScore + clickBonus);\r\n  };\r\n\r\n  // AutoClick bonus\r\n  const [bonus, setBonus] = useState(() => {\r\n    const localDataBonus = localStorage.getItem('bonus');\r\n    return localDataBonus ? JSON.parse(localDataBonus) : 0;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('bonus', bonus);\r\n  }, [bonus]);\r\n\r\n  // Włączenie bonusu, gdy aktywny jest AutoClick. Interwał ustawiony na 1s.\r\n  const [isRunning, setIsRunning] = useState(true);\r\n\r\n  useInterval(\r\n    () => {\r\n      setScore(score + bonus);\r\n      setAchieveScore(achieveScore + bonus);\r\n    },\r\n    isRunning ? 1000 : null,\r\n  );\r\n\r\n  // ulepszenie autoClicka\r\n\r\n  const handleBonusActive = () => {\r\n\r\n    if (score >= 500) {\r\n      setBonus(bonus + 1);\r\n      setScore(score - 500);\r\n    }\r\n  };\r\n\r\n  const [bgColor, setBgcolor] = useState();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page\" style={{ backgroundColor: bgColor }}>\r\n        <Switch>\r\n        <Route\r\n          path=\"/\"\r\n          exact\r\n          render={() => <GamePage score={score} handleGame={handleButton} />}\r\n        />\r\n        <Route\r\n          path=\"/Upgrades\"\r\n          render={() => (\r\n            <Upgrades\r\n            setIsRunning={setIsRunning}\r\n              isRunning={isRunning}\r\n              bonus={bonus}\r\n              bonusActive={handleBonusActive}\r\n              score={score}\r\n              handleClickBonus={handleClickBonus}\r\n              clickBonus={clickBonus}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/achievements\"\r\n          render={() => (\r\n            <Achievements achieveScore={achieveScore} setBgcolor={setBgcolor} />\r\n          )}\r\n        />\r\n        <Route path=\"/Reset\" render={() => <Reset setScore={setScore} setBonus={setBonus} setAchieveScore={setAchieveScore} setclickBonus={setclickBonus}/>} />\r\n        <Route component={ErrorPage} />\r\n        </Switch>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import './components/styles/App.scss';\nimport { HashRouter as Router } from 'react-router-dom';\nimport Navigation from './components/layouts/Navigation';\nimport Page from './components/layouts/Page';\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <div className=\"App\">\n        <header>\n        <Navigation />\n        </header>\n        <main>\n        <Page />\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}